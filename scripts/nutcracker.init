#! /bin/sh
#
# chkconfig: - 55 45
# description:  Twitter's twemproxy nutcracker
# processname: nutcracker
# config: /etc/sysconfig/nutcracker

# Source function library.
. /etc/rc.d/init.d/functions

prog="nutcracker"
sysconfig=/etc/sysconfig/${prog}
lockfile=/var/lock/subsys/${prog}

NODES=`ls -ld /sys/devices/system/node/node* | wc -l`
USER="nobody"

# Defaults, may be overriden in sysconfig
DEFAULT_STATS_PORT=2222
DEFAULT_LOG_LEVEL=5

# Check that networking is up and that we have some config
if [ "$NETWORKING" = "no" -o ! -d ${sysconfig} -o "$(echo ${sysconfig}/*)" = "${sysconfig}/*" ]
then
    exit 0
fi

# Find all files in /etc/sysconfig/nutcracker and make instances for them
#
# Each file must define these variables:
#  CONFIG_FILE    The yml config file for this instance
# Each file may define these variables:
#  STATS_PORT     Port to bind for stats, defaults to 2222
#  LOG_LEVEL      Level to log at, defaults to 5
#  EXTRA_OPTS     Extra options to pass to nutcracker, defaults to empty
#  LOCK_NODE      Which numa node (0 or 1 supported currently) to bind to, defaults to empty which means unbound
#
unset INSTANCE_OPTIONS LOCK_OPTIONS INSTANCE_NAMES
INSTANCES=( $(echo ${sysconfig}/*) )
NINSTANCES=${#INSTANCES[*]}
for i in $(seq 0 $((${NINSTANCES}-1))); do
    STATS_PORT=${DEFAULT_STATS_PORT}
    LOG_LEVEL=${DEFAULT_LOG_LEVEL}
    unset EXTRA_OPTS CONFIG_FILE LOCK_NODE
    . ${INSTANCES[$i]}
    INSTANCE_NAMES[$i]=$(basename ${INSTANCES[$i]})
    INSTANCE_OPTIONS[$i]="-d -c ${CONFIG_FILE} -o /var/log/${prog}/${INSTANCE_NAMES[$i]}.log -s ${STATS_PORT} -v ${LOG_LEVEL}"
    LOCK_OPTIONS[$i]="${LOCK_NODE}"
done

RETVAL=0
start () {
    chown $USER /var/run/${prog}
    for i in $(seq 0 $((${NINSTANCES}-1))); do
        echo -n $"Starting $prog instance:  ${INSTANCE_NAMES[$i]}: "
        OPTIONS=${INSTANCE_OPTIONS[$i]}
        NODE=${LOCK_OPTIONS[$i]}
        if [ ${NODES} -gt 1 -a -n "${NODE}" ]; then
            echo 100 > /sys/kernel/mm/redhat_transparent_hugepage/khugepaged/scan_sleep_millisecs
            daemon --user ${USER} --check=${prog} numactl --cpunodebind=${NODE} --preferred=${NODE} ${prog} $OPTIONS
        else
            daemon --user ${USER} --check=${prog} ${prog} $OPTIONS
        fi
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && touch ${lockfile}
    done
}

stop () {
    # Pkill is a lot easier and safer than pid files
    echo -n $"Stopping $prog instances:  ${INSTANCE_NAMES[@]:0}: "
    pkill -u ${USER} ${prog}
    RETVAL=$?
    if [ $RETVAL = 0 ]; then
        echo_success
        rm -f ${lockfile}
    else
        echo_failure
    fi
    echo
}

restart () {
    stop
    start
}


# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status ${prog}
    ;;
  restart|reload)
    restart
    ;;
  condrestart)
    [ -f ${lockfile} ] && restart || :
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload|condrestart}"
    exit 1
esac

exit $?

