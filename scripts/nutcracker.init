#! /bin/sh
#
# chkconfig: - 55 45
# description:  Twitter's twemproxy nutcracker
# processname: nutcracker
# config: /etc/sysconfig/nutcracker

# Source function library.
. /etc/rc.d/init.d/functions

prog="nutcracker"

NODES=`ls -ld /sys/devices/system/node/node* | wc -l`
USER="nobody"

# EXISTING:
# OPTIONS="-d -c /etc/webtagconfig/nutcracker.yml -o /var/log/nutcracker/nutcracker.log -s 2222 -v 5"

# Defaults, may be overriden in sysconfig
INSTANCES=$NODES
[[ "$INSTANCES" -lt 2 ]] && INSTANCES=2
# Default options for first instance.  Options for other instances can be provided in sysconfig as OPTIONS_2, etc.
OPTIONS="-d -c /etc/${prog}/${prog}.yml"

if [ -f /etc/sysconfig/${prog} ];then
    . /etc/sysconfig/${prog}
fi

# Only start instances for which we have options
for i in `seq 2 ${INSTANCES}`; do
    optvar="OPTIONS_${i}"
    if [ -z "${!optvar}" ]; then
        let INSTANCES=${i}-1
        break
    fi
done

# Check that networking is up.
if [ "$NETWORKING" = "no" ]
then
    exit 0
fi

RETVAL=0
start () {
    chown $USER /var/run/${prog}
    for i in `seq 1 ${INSTANCES}`; do
        setpidlock $i
        echo -n $"Starting $prog instance ${i}: "
        if [ ${i} -gt 1 ]; then
            optvar="OPTIONS_${i}"
            OPTIONS="${!optvar}"
        fi
        if [ ${NODES} -gt 1 ]; then
            echo 100 > /sys/kernel/mm/redhat_transparent_hugepage/khugepaged/scan_sleep_millisecs
            let NODE=${i}-1
            PORT=${PORT} daemon --user ${USER} --check=${prog} numactl --cpunodebind=${NODE} --preferred=${NODE} ${prog} -p ${pidfile} $OPTIONS
        else
            PORT=${PORT} daemon --user ${USER} --check=${prog} ${prog} -p ${pidfile} $OPTIONS
        fi
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && touch ${lockfile}
    done
}

stop () {
    for i in `seq 1 ${INSTANCES}`; do
        setpidlock $i
        echo -n $"Stopping $prog on instance ${i}: "
        killproc -p "${pidfile}" ${prog}
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
    done
}

setpidlock() {
    i=$1
    pidfile=/var/run/${prog}/${prog}.${i}.pid
    lockfile=/var/lock/subsys/${prog}${i}
}

restart () {
    stop
    start
}


# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status ${prog}
    ;;
  restart|reload)
    restart
    ;;
  condrestart)
    [ -f /var/lock/subsys/${prog} ] && restart || :
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload|condrestart}"
    exit 1
esac

exit $?

